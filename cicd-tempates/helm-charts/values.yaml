# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Define just your repository name:
dockerRegistry: gitlab.local.az:4567
imagePullSecrets: regcred

applicationName: __CD_APPLICATION_NAME__
namespace: __CD_HELM_NAMESPACE__
replicaCount: 1

image:
  name: __CD_GROUP_NAME__/__CD_SUBGROUP_NAME__/__CD_PROJECT_NAME__
  tag: 1133
  pullPolicy: IfNotPresent

secrets:
  enabled: false
  data:
    - name: SECRET_KEY
      valueFrom:
        name: secret_name
        key: SECRET_KEY

configmaps:
  enabled: false
  data:
    KEY_NAME: VALUE_NAME
    
# Default Container Termination Time
terminationGracePeriodSeconds: 30

# Container  Port
ports:
  enabled: true
  containerPort: __CD_HELM_CONTAINER_PORT__

service:
  enabled: true
  type: ClusterIP
  port: __CD_HELM_SERVICE_PORT__

hostsfile:
  enabled: false
  records:
    - name: example.local
      ip: 127.0.0.1
    - name: testing.local
      ip: 127.0.0.2

# App Rolling Update
strategy:
  enabled: true
  type: RollingUpdate
  rollingUpdate: #Update Pods a certain number at a time
    maxUnavailable: 0 #Total number of pods that can be unavailable at once
    maxSurge: 1 #Maximum number of pods that can be deployed above desired state
minReadySeconds: 5 # After readyness probe wait 5 second and start rolling deploy app
revisionHistoryLimit: 1

hpa:
  enabled: false
  minReplicas: "1"
  maxReplicas: "3"
  cpuUtilization: "90"
  memoryUtilization: "450Mi"

resources:
  enabled: true
  limits:
    memory: 600Mi
    cpu: 600m
  requests:
    cpu: 200m
    memory: 200Mi

readinessProbe:
  enabled: true
  httpGet:
    path: actuator/health
    port: __CD_HELM_MANAGEMENT_PORT__
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 2
  failureThreshold: 1
  successThreshold: 1

livenessProbe:
  enabled: true
  httpGet:
    path: /
    port: __CD_HELM_MANAGEMENT_PORT__
  initialDelaySeconds: 70
  periodSeconds: 20
  timeoutSeconds: 2
  failureThreshold: 1
  successThreshold: 1

istio:
  enabled: false
  hostname: __CD_HELM_DOMAIN_NAME__
  tls: false
  certSecret: <secret>
  routes: 
    - route: /
      service: __CD_APPLICATION_NAME__
      namespace: __CD_HELM_NAMESPACE__
      port: __CD_HELM_SERVICE_PORT__
  annotations: {}

env:
- name: HOST
  valueFrom:
    fieldRef:
      fieldPath: status.hostIP
- name: TZ
  value: 'Asia/Baku'

hostpathVolume:
  enabled: false
  mountPath: /share
  type: Directory
  name: testhostpath

volumeMounts:
  enabled: false
  volumes:
  - name: shared          # mount name 
    claimName: nfs-pvc    # pvc name
    mountPath: /tmp/test  # mount path inside of container

nameOverride: ""
fullnameOverride: ""

podSecurityContext:
  fsGroup: 2000
securityContext:
  capabilities:
    drop:
      - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
nodeSelector: {}
tolerations: []
affinity: {}
